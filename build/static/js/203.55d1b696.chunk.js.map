{"version":3,"file":"static/js/203.55d1b696.chunk.js","mappings":"6RAqBA,MA2FA,EA3FwBA,KAAO,IAADC,EAC5B,MAAM,SACJC,EAAQ,SACRC,EAAQ,aACRC,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,OAEGC,EAAUC,KADAC,EAAAA,EAAAA,OACeC,EAAAA,EAAAA,UAAS,MAClCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,GAErCG,EAAgBC,UACpB,IACE,MAEMC,SAFiBC,EAAAA,EAAAA,OAEDD,KAAKE,KAAKC,kBAChChB,EAAS,oBAAqBa,EAChC,CAAE,MAAOI,GACPC,EAAAA,GAAMC,MAAM,2BACd,IAEFC,EAAAA,EAAAA,YAAU,KACRT,GAAe,GACd,CAACX,IAoBJ,OACEqB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAClCF,EAAAA,EAAAA,KAACG,EAAAA,GAAU,CAACF,UAAU,OAAMC,UAC1BF,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAAAF,UACHF,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAI,EAAEJ,UACVK,EAAAA,EAAAA,MAACC,EAAAA,GAAK,CAAAN,SAAA,EACJF,EAAAA,EAAAA,KAACS,EAAAA,GAAW,CAAAP,UACVF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,0BAEVK,EAAAA,EAAAA,MAACG,EAAAA,GAAS,CAAAR,SAAA,EACRF,EAAAA,EAAAA,KAACW,EAAAA,GAAc,KACfJ,EAAAA,EAAAA,MAACK,EAAAA,GAAK,CAACX,UAAU,UAAUY,SAAUjC,GA7BjCY,IAChBH,GAAa,IACbyB,EAAAA,EAAAA,IAAsBtB,EAAMR,GACzB+B,MAAMC,IACL1B,IACAO,EAAAA,GAAMoB,QAAQ,uBACd5B,GAAa,EAAM,IAEpB6B,OAAOtB,IAAS,IAADuB,EAAAC,EACd,MAAMC,GAC4B,KAApB,QAAZF,EAAAvB,EAAI0B,gBAAQ,IAAAH,GAAM,QAANC,EAAZD,EAAc3B,YAAI,IAAA4B,OAAN,EAAZA,EAAoBH,SAChB,gCACA,wBACNpB,EAAAA,GAAMC,MAAMuB,GACZhC,GAAa,EAAM,GACnB,IAcoEa,SAAA,EAC1DK,EAAAA,EAAAA,MAACF,EAAAA,GAAI,CAACC,GAAI,GAAGJ,SAAA,EACXF,EAAAA,EAAAA,KAACuB,EAAAA,GAAU,CAAArB,SAAC,wBACZF,EAAAA,EAAAA,KAACwB,EAAAA,GAAa,CACZC,GAAG,uBACC/C,EAAS,oBAAqB,CAChCgD,SAAU,qCAEZC,YAAY,qBACZC,UAAW9C,EAAOa,qBAEpBK,EAAAA,EAAAA,KAAC6B,EAAAA,GAAa,CAACD,UAAW9C,EAAOa,kBAAkBO,SACxB,QADwBzB,EAChDK,EAAOa,yBAAiB,IAAAlB,OAAA,EAAxBA,EAA0BqD,cAG/B9B,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAI,GAAIL,UAAU,2BAA0BC,SAC/Cd,GACCmB,EAAAA,EAAAA,MAACwB,EAAAA,GAAO,CAACC,UAAQ,EAAA9B,SAAA,EACfF,EAAAA,EAAAA,KAACiC,EAAAA,GAAQ,CAACC,UAAU,OAAOC,KAAK,KAAK,cAAY,SAAS,iBAI5DnC,EAAAA,EAAAA,KAAC+B,EAAAA,GAAO,CAACK,KAAK,SAASnC,UAAU,YAAWC,SAAC,6BAWzD,C","sources":["views/pages/setting/TermsConditions.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CContainer,\n  CForm,\n  CFormFeedback,\n  CFormLabel,\n  CRow,\n  CSpinner,\n  CFormTextarea,\n} from '@coreui/react'\nimport { useForm } from 'react-hook-form'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { updateGeneralSettings, getGeneralSettings } from 'src/redux/api/api'\n\nconst TermsConditions = () => {\n  const {\n    register,\n    setValue,\n    handleSubmit,\n    formState: { errors },\n  } = useForm()\n  const navigate = useNavigate()\n  const [isUpdate, setIsUpdate] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n\n  const fetchSettings = async () => {\n    try {\n      const settings = await getGeneralSettings()\n\n      const data = settings.data.info.termsandcondition\n      setValue('termsandcondition', data)\n    } catch (err) {\n      toast.error('Failed to fetch settings')\n    }\n  }\n  useEffect(() => {\n    fetchSettings()\n  }, [setValue])\n\n  const onSubmit = (data) => {\n    setIsLoading(true)\n    updateGeneralSettings(data, isUpdate)\n      .then((res) => {\n        fetchSettings()\n        toast.success('Update Successfully')\n        setIsLoading(false)\n      })\n      .catch((err) => {\n        const errorMessage =\n          err.response?.data?.success === false\n            ? 'Must fill all required fields'\n            : 'Something went wrong!'\n        toast.error(errorMessage)\n        setIsLoading(false)\n      })\n  }\n\n  return (\n    <div className=\"bg-light min-vh-100\">\n      <CContainer className=\"mt-3\">\n        <CRow>\n          <CCol md={8}>\n            <CCard>\n              <CCardHeader>\n                <strong>Terms & Conditions</strong>\n              </CCardHeader>\n              <CCardBody>\n                <ToastContainer />\n                <CForm className=\"row g-3\" onSubmit={handleSubmit(onSubmit)}>\n                  <CCol md={12}>\n                    <CFormLabel>Terms & Conditions</CFormLabel>\n                    <CFormTextarea\n                      id=\"termsandcondition\"\n                      {...register('termsandcondition', {\n                        required: 'Terms and Conditions is required',\n                      })}\n                      placeholder=\"Terms & Conditions\"\n                      invalid={!!errors.termsandcondition}\n                    />\n                    <CFormFeedback invalid={!!errors.termsandcondition}>\n                      {errors.termsandcondition?.message}\n                    </CFormFeedback>\n                  </CCol>\n                  <CCol md={12} className=\"text-center submitButton\">\n                    {isLoading ? (\n                      <CButton disabled>\n                        <CSpinner component=\"span\" size=\"sm\" aria-hidden=\"true\" />\n                        Loading...\n                      </CButton>\n                    ) : (\n                      <CButton type=\"submit\" className=\"AddButton\">\n                        Update\n                      </CButton>\n                    )}\n                  </CCol>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default TermsConditions\n"],"names":["TermsConditions","_errors$termsandcondi","register","setValue","handleSubmit","formState","errors","useForm","isUpdate","setIsUpdate","useNavigate","useState","isLoading","setIsLoading","fetchSettings","async","data","getGeneralSettings","info","termsandcondition","err","toast","error","useEffect","_jsx","className","children","CContainer","CRow","CCol","md","_jsxs","CCard","CCardHeader","CCardBody","ToastContainer","CForm","onSubmit","updateGeneralSettings","then","res","success","catch","_err$response","_err$response$data","errorMessage","response","CFormLabel","CFormTextarea","id","required","placeholder","invalid","CFormFeedback","message","CButton","disabled","CSpinner","component","size","type"],"sourceRoot":""}