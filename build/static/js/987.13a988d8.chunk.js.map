{"version":3,"file":"static/js/987.13a988d8.chunk.js","mappings":"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","sources":["views/pages/recipe/nutrition/NutritionForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CContainer,\n  CForm,\n  CFormFeedback,\n  CFormInput,\n  CFormLabel,\n  CRow,\n  CSpinner,\n  CFormSelect,\n} from '@coreui/react'\nimport { useForm } from 'react-hook-form'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport {\n  addIngredient,\n  addNutrition,\n  getAllUnit,\n  updateIngredient,\n  updateNutrition,\n} from 'src/redux/api/api'\n\nconst NutritionForm = () => {\n  const {\n    register,\n    getValues,\n    setValue,\n    handleSubmit,\n    clearErrors,\n    formState: { errors },\n  } = useForm()\n  const navigate = useNavigate()\n  const [isUpdate, setIsUpdate] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const { state } = useLocation()\n\n  const onSubmit = (data) => {\n    const formData = {\n      name: data.name,\n      amount: data.amount,\n      recipeid: state?.editData?.recipeid || '',\n    }\n\n    isUpdate === ''\n      ? addNutrition(formData)\n          .then((res) => {\n            navigate('/Nutrition')\n          })\n          .catch((err) => {\n            if (!err.response.data.success) {\n              toast.error(err.response.data.message)\n            } else {\n              setIsLoading(false)\n            }\n          })\n      : updateNutrition(formData, isUpdate)\n          .then((res) => {\n            navigate('/Nutrition', { state: { id: state.editData.recipeid } })\n          })\n          .catch((err) => {\n            console.log(err)\n            if (!err.response.data.success) {\n              toast.error('Must fill all required fields')\n            } else {\n              toast.error('Something went wrong!')\n            }\n            setIsLoading(false)\n          })\n  }\n\n  useEffect(() => {\n    if (state) {\n      const { editData } = state\n      setIsUpdate(editData._id)\n      setValue('name', editData.name)\n      setValue('amount', editData.amount)\n    } else {\n      navigate('/Nutrition')\n    }\n  }, [])\n\n  return (\n    <div className=\"bg-light min-vh-100\">\n      <CContainer className=\"mt-3\">\n        <CRow>\n          <CCol md={8}>\n            <CCard>\n              <CCardHeader>\n                <strong>Nutrition Form</strong>\n              </CCardHeader>\n              <CCardBody>\n                <ToastContainer />\n                <CForm className=\"row g-3\" onSubmit={handleSubmit(onSubmit)}>\n                  <CCol xl={6} md={12}>\n                    <CFormLabel>Nutrition Name</CFormLabel>\n                    <CFormInput\n                      type=\"text\"\n                      id=\"validationDefault01\"\n                      {...register('name', {\n                        required: 'Nutrition name is required',\n                      })}\n                      placeholder=\"Nutrition name\"\n                      invalid={!!errors.name}\n                    />\n                    <CFormFeedback invalid>Nutrition name is required</CFormFeedback>\n                  </CCol>\n                  <CCol xl={6} md={12}>\n                    <CFormLabel>Amount</CFormLabel>\n                    <CFormInput\n                      type=\"text\"\n                      id=\"validationDefault02\"\n                      {...register('amount', {\n                        required: 'Amount is required',\n                      })}\n                      placeholder=\"Nutrition amount\"\n                      invalid={!!errors.amount}\n                    />\n                    <CFormFeedback invalid>Amount is required</CFormFeedback>\n                  </CCol>\n\n                  <CCol xl={6} md={12} className=\"text-center submitButton\">\n                    {isLoading ? (\n                      <CButton disabled>\n                        <CSpinner component=\"span\" size=\"sm\" aria-hidden=\"true\" />\n                        Loading...\n                      </CButton>\n                    ) : (\n                      <CButton type=\"submit\" className=\"AddButton\">\n                        {isUpdate === '' ? 'Add' : 'Update'}\n                      </CButton>\n                    )}\n                  </CCol>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default NutritionForm\n"],"names":["NutritionForm","register","getValues","setValue","handleSubmit","clearErrors","formState","errors","useForm","navigate","useNavigate","isUpdate","setIsUpdate","useState","isLoading","setIsLoading","state","useLocation","useEffect","editData","_id","name","amount","_jsx","className","children","CContainer","CRow","CCol","md","_jsxs","CCard","CCardHeader","CCardBody","ToastContainer","CForm","onSubmit","data","_state$editData","formData","recipeid","addNutrition","then","res","catch","err","response","success","toast","error","message","updateNutrition","id","console","log","xl","CFormLabel","CFormInput","type","required","placeholder","invalid","CFormFeedback","CButton","disabled","CSpinner","component","size"],"sourceRoot":""}