{"version":3,"file":"static/js/984.9c87bd20.chunk.js","mappings":"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","sources":["views/pages/recipe/nutrition/NutritionAdd.jsx","../node_modules/@coreui/icons/src/free/cil-plus.ts"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CRow,\n  CSpinner,\n  CFormText,\n  CFormSelect,\n} from '@coreui/react'\nimport { useForm, useFieldArray } from 'react-hook-form'\nimport CIcon from '@coreui/icons-react'\nimport { cilPlus } from '@coreui/icons'\nimport { addIngredient, addNutrition } from 'src/redux/api/api'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useLocation, useNavigate } from 'react-router-dom'\n\nconst NutritionAdd = () => {\n  const [isLoading, setIsLoading] = useState(false)\n  const { state } = useLocation()\n  const navigate = useNavigate()\n\n  const {\n    register,\n    control,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      elements: [{ name: '', amount: '', unitId: '', idValue: '' }],\n    },\n  })\n\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: 'elements',\n  })\n\n  const handleAddElement = () => {\n    append({ name: '', amount: '', idValue: state.id })\n  }\n\n  const handleRemoveElement = (index) => {\n    remove(index)\n  }\n\n  const onSubmit = async (data) => {\n    setIsLoading(true)\n    try {\n      const transformedData = data.elements.map((item) => ({\n        name: item.name,\n        amount: item.amount,\n        recipeid: state.id,\n      }))\n\n      console.log(transformedData)\n      const response = await addNutrition(transformedData)\n\n      console.log('API Response:', response.data)\n      toast.success('Data submitted successfully!')\n      navigate('/Nutrition', { state: { id: state.id } })\n    } catch (error) {\n      console.error('Error submitting form data:', error)\n      toast.error('Error submitting form data.')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    console.log(state.id)\n  }, [])\n\n  return (\n    <>\n      <CContainer className=\"mt-3\">\n        <CRow>\n          <CCol md={12}>\n            <CCard>\n              <CCardHeader>\n                <strong>Nutrition Form</strong>\n              </CCardHeader>\n              <CCardBody className=\"mt-3\">\n                <ToastContainer />\n                <CForm className=\"row g-3\" onSubmit={handleSubmit(onSubmit)}>\n                  {fields.map((field, index) => (\n                    <CRow key={field.id} className=\"mb-3 align-items-end\">\n                      <CCol xl={3} md={12}>\n                        <CFormLabel>Name</CFormLabel>\n                        <CFormInput\n                          type=\"text\"\n                          {...register(`elements.${index}.name`, {\n                            required: 'Name is required',\n                          })}\n                          invalid={!!errors.elements?.[index]?.name}\n                          placeholder=\"Name\"\n                        />\n                        {errors.elements?.[index]?.name && (\n                          <CFormText className=\"text-danger\">\n                            {errors.elements[index].name.message}\n                          </CFormText>\n                        )}\n                      </CCol>\n                      <CCol xl={3} md={12}>\n                        <CFormLabel>Amount</CFormLabel>\n                        <CFormInput\n                          type=\"text\"\n                          {...register(`elements.${index}.amount`, {\n                            required: 'Amount is required',\n                          })}\n                          invalid={!!errors.elements?.[index]?.amount}\n                          placeholder=\"Amount\"\n                        />\n                        {errors.elements?.[index]?.amount && (\n                          <CFormText className=\"text-danger\">\n                            {errors.elements[index].amount.message}\n                          </CFormText>\n                        )}\n                      </CCol>\n\n                      <CCol xl={2} md={12} className=\"mt-2\">\n                        <CButton\n                          onClick={() => handleRemoveElement(index)}\n                          color=\"danger\"\n                          className=\"me-2\"\n                        >\n                          Remove\n                        </CButton>\n                      </CCol>\n                      {index === fields.length - 1 && (\n                        <CCol xl={1} md={12}>\n                          <CButton onClick={handleAddElement} color=\"primary\" className=\"me-2\">\n                            <CIcon icon={cilPlus} />\n                          </CButton>\n                        </CCol>\n                      )}\n                    </CRow>\n                  ))}\n                  <CRow className=\"mt-3\">\n                    <CCol md={12} className=\"text-center\">\n                      {isLoading ? (\n                        <CButton disabled>\n                          <CSpinner component=\"span\" size=\"sm\" aria-hidden=\"true\" />\n                          Loading...\n                        </CButton>\n                      ) : (\n                        <CButton type=\"submit\" className=\"AddButton\">\n                          Submit\n                        </CButton>\n                      )}\n                    </CCol>\n                  </CRow>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  )\n}\n\nexport default NutritionAdd\n","export var cilPlus = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='440 240 272 240 272 72 240 72 240 240 72 240 72 272 240 272 240 440 272 440 272 272 440 272 440 240' class='ci-primary'/>\"];\n"],"names":["NutritionAdd","isLoading","setIsLoading","useState","state","useLocation","navigate","useNavigate","register","control","handleSubmit","formState","errors","useForm","defaultValues","elements","name","amount","unitId","idValue","fields","append","remove","useFieldArray","handleAddElement","id","useEffect","console","log","_jsx","_Fragment","children","CContainer","className","CRow","CCol","md","_jsxs","CCard","CCardHeader","CCardBody","ToastContainer","CForm","onSubmit","async","transformedData","data","map","item","recipeid","response","addNutrition","toast","success","error","field","index","_errors$elements","_errors$elements$inde","_errors$elements2","_errors$elements2$ind","_errors$elements3","_errors$elements3$ind","_errors$elements4","_errors$elements4$ind","xl","CFormLabel","CFormInput","type","concat","required","invalid","placeholder","CFormText","message","CButton","onClick","handleRemoveElement","color","length","CIcon","icon","cilPlus","disabled","CSpinner","component","size"],"sourceRoot":""}