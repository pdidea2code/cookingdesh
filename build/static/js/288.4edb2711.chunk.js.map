{"version":3,"file":"static/js/288.4edb2711.chunk.js","mappings":"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","sources":["views/pages/recipe/Ingredient.jsx","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/DeleteRounded.js","../node_modules/@mui/icons-material/esm/EditRounded.js"],"sourcesContent":["import { Button, Switch, IconButton } from '@mui/material'\r\nimport MUIDataTable from 'mui-datatables'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport * as Icons from '@mui/icons-material'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport swal from 'sweetalert'\r\nimport {\r\n  deleteMultipleIngredient,\r\n  deleteIngredient,\r\n  getAllIngredient,\r\n  updateIngredientStatus,\r\n} from 'src/redux/api/api'\r\n\r\nconst Ingredient = () => {\r\n  const navigate = useNavigate()\r\n  const { state } = useLocation()\r\n  const [dataTableData, setDataTable] = useState([])\r\n\r\n  const ingredientList = async () => {\r\n    try {\r\n      const res = await getAllIngredient(state.id)\r\n      // console.log(res.data.info)\r\n      const transformedData = res.data.info.map((ingredient) => ({\r\n        ...ingredient,\r\n        unitname: ingredient.unit == null ? '-' : ingredient.unit.name,\r\n      }))\r\n      setDataTable(transformedData)\r\n    } catch (err) {\r\n      console.log(err)\r\n      if (!err.response.data.success) {\r\n        if (err.response.data.status === 401) {\r\n          toast.error(err.response.data.message)\r\n        } else {\r\n          toast.error(err.response.data, 'else')\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    ingredientList()\r\n  }, [])\r\n\r\n  const columns = [\r\n    {\r\n      name: 'name',\r\n      label: 'Name',\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'amount',\r\n      label: 'Weight',\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'unitname',\r\n      label: 'Unit',\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: '_id',\r\n      label: 'Action',\r\n      options: {\r\n        customBodyRender: (value) => {\r\n          return (\r\n            <div>\r\n              <Icons.EditRounded\r\n                className=\"editButton\"\r\n                onClick={() => {\r\n                  const editData = dataTableData.find((data) => data._id === value)\r\n\r\n                  navigate('/Ingredient-form', {\r\n                    state: { editData: editData },\r\n                  })\r\n                }}\r\n              />\r\n              <Icons.DeleteRounded\r\n                className=\"deleteButton\"\r\n                onClick={async () => {\r\n                  const confirm = await swal({\r\n                    title: 'Are you sure?',\r\n                    text: 'Are you sure you want to delete this ingredient? All related data will also be deleted.',\r\n                    icon: 'warning',\r\n                    buttons: ['No, cancel it!', 'Yes, I am sure!'],\r\n                    dangerMode: true,\r\n                  })\r\n                  if (confirm) {\r\n                    try {\r\n                      await deleteIngredient(value)\r\n                      toast.success('Deleted successfully!', {\r\n                        key: value,\r\n                      })\r\n                      ingredientList()\r\n                    } catch {\r\n                      toast.error('Something went wrong!', {\r\n                        key: value,\r\n                      })\r\n                    }\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n    },\r\n  ]\r\n\r\n  const deleteMultiple = async (selectedRows) => {\r\n    const ids = selectedRows.data.map((row) => dataTableData[row.dataIndex]._id)\r\n\r\n    const confirm = await swal({\r\n      title: 'Are you sure?',\r\n      text: 'Are you sure that you want to delete the selected ingredients?',\r\n      icon: 'warning',\r\n      buttons: ['No, cancel it!', 'Yes, I am sure!'],\r\n      dangerMode: true,\r\n    })\r\n\r\n    if (confirm) {\r\n      try {\r\n        await deleteMultipleIngredient(ids)\r\n        toast.success('Deleted successfully!', {\r\n          key: ids.join(','),\r\n        })\r\n        ingredientList()\r\n      } catch {\r\n        toast.error('Something went wrong!', {\r\n          key: ids.join(','),\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  const SelectedRowsToolbar = ({ selectedRows }) => {\r\n    return (\r\n      <div>\r\n        <IconButton onClick={() => deleteMultiple(selectedRows)}>\r\n          <Icons.Delete />\r\n        </IconButton>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const options = {\r\n    customToolbarSelect: (selectedRows, data) => (\r\n      <SelectedRowsToolbar selectedRows={selectedRows} data={data} columns={columns} />\r\n    ),\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <div className=\"right-text\">\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"medium\"\r\n          className=\"AddButton\"\r\n          onClick={() => navigate('/Add-Ingredient', { state: { editData: state.id } })}\r\n        >\r\n          Add Ingredient\r\n        </Button>\r\n      </div>\r\n      <MUIDataTable\r\n        title={'Ingredient List'}\r\n        data={dataTableData}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Ingredient\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2zM18 4h-2.5l-.71-.71c-.18-.18-.44-.29-.7-.29H9.91c-.26 0-.52.11-.7.29L8.5 4H6c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1\"\n}), 'DeleteRounded');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.46v3.04c0 .28.22.5.5.5h3.04c.13 0 .26-.05.35-.15L17.81 9.94l-3.75-3.75L3.15 17.1c-.1.1-.15.22-.15.36M20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'EditRounded');"],"names":["Ingredient","navigate","useNavigate","state","useLocation","dataTableData","setDataTable","useState","ingredientList","async","transformedData","getAllIngredient","id","data","info","map","ingredient","unitname","unit","name","err","console","log","response","success","status","toast","error","message","useEffect","columns","label","options","filter","sort","customBodyRender","value","_jsxs","children","_jsx","Icons","className","onClick","editData","find","_id","swal","title","text","icon","buttons","dangerMode","deleteIngredient","key","SelectedRowsToolbar","_ref","selectedRows","IconButton","ids","row","dataIndex","deleteMultipleIngredient","join","deleteMultiple","customToolbarSelect","_Fragment","ToastContainer","Button","variant","size","MUIDataTable","createSvgIcon","d"],"sourceRoot":""}