{"version":3,"file":"static/js/770.210c1bc9.chunk.js","mappings":"8RAUA,MAqFA,EArFaA,KACX,MAAOC,EAAeC,IAAgBC,EAAAA,EAAAA,UAAS,KAExCC,EAASC,KADCC,EAAAA,EAAAA,OACaH,EAAAA,EAAAA,UAAS,MAmBvCI,EAAAA,EAAAA,YAAU,KAjBGC,iBACLC,EAAAA,EAAAA,MACHC,MAAMC,IACLT,EAAaS,EAAIC,KAAKC,KAAKC,MAC3BT,EAAW,GAADU,OAAIC,oDAA0C,IAEzDC,OAAOC,IACDA,EAAIC,SAASP,KAAKQ,UACY,MAA7BF,EAAIC,SAASP,KAAKS,OACpBC,EAAAA,GAAMC,MAAML,EAAIC,SAASP,KAAKY,SAE9BF,EAAAA,GAAMC,MAAML,EAAIC,SAASP,KAAM,QAEnC,GACA,EAIJa,EAAM,GACL,IAEH,MAAMC,EAAU,CACd,CACEC,KAAM,OACNC,MAAO,OACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACEJ,KAAM,QACNC,MAAO,QACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACEJ,KAAM,OACNC,MAAO,WACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACEJ,KAAM,QACNC,MAAO,QACPC,QAAS,CACPG,iBAAmBC,GACjBA,GACEC,EAAAA,EAAAA,KAAA,OACEC,IAAG,GAAApB,OAAKC,oDAAuCD,OAAGkB,GAClDG,IAAKH,EACLI,MAAO,CAAEC,OAAQ,OAAQC,MAAO,OAAQC,aAAc,UAGxDN,EAAAA,EAAAA,KAAA,OACEC,IAAKM,EACLL,IAAKH,EACLI,MAAO,CAAEC,OAAQ,OAAQC,MAAO,OAAQC,aAAc,YAWlE,OACEE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEV,EAAAA,EAAAA,KAACW,EAAAA,GAAc,KACfX,EAAAA,EAAAA,KAACY,EAAAA,GAAY,CAACC,MAAO,YAAanC,KAAMX,EAAeyB,QAASA,EAASG,QAP7D,CACdmB,eAAgB,YAOb,C","sources":["views/pages/user/User.jsx"],"sourcesContent":["import { Button, IconButton, Switch } from '@mui/material'\nimport MUIDataTable from 'mui-datatables'\nimport React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport * as Icons from '@mui/icons-material'\nimport { ToastContainer, toast } from 'react-toastify'\nimport { getAllUser } from 'src/redux/api/api'\nimport swal from 'sweetalert'\nimport defaultImg from '../../../../src/assets/images/default.png'\n\nconst User = () => {\n  const [dataTableData, setDataTable] = useState([])\n  const navigate = useNavigate()\n  const [baseUrl, setBaseUrl] = useState('')\n\n  const list = async () => {\n    await getAllUser()\n      .then((res) => {\n        setDataTable(res.data.info.user)\n        setBaseUrl(`${process.env.REACT_APP_USER_PROFILE_PATH}`)\n      })\n      .catch((err) => {\n        if (!err.response.data.success) {\n          if (err.response.data.status === 401) {\n            toast.error(err.response.data.message)\n          } else {\n            toast.error(err.response.data, 'else')\n          }\n        }\n      })\n  }\n\n  useEffect(() => {\n    list()\n  }, [])\n\n  const columns = [\n    {\n      name: 'name',\n      label: 'Name',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'email',\n      label: 'Email',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'mono',\n      label: 'MobileNo',\n      options: {\n        filter: true,\n        sort: false,\n      },\n    },\n    {\n      name: 'image',\n      label: 'Image',\n      options: {\n        customBodyRender: (image) =>\n          image ? (\n            <img\n              src={`${process.env.REACT_APP_USER_PROFILE_PATH}${image}`}\n              alt={image}\n              style={{ height: '50px', width: '50px', borderRadius: '50%' }}\n            />\n          ) : (\n            <img\n              src={defaultImg}\n              alt={image}\n              style={{ height: '50px', width: '50px', borderRadius: '50%' }}\n            />\n          ),\n      },\n    },\n  ]\n\n  const options = {\n    selectableRows: 'none',\n  }\n\n  return (\n    <>\n      <ToastContainer />\n      <MUIDataTable title={'User List'} data={dataTableData} columns={columns} options={options} />\n    </>\n  )\n}\n\nexport default User\n"],"names":["User","dataTableData","setDataTable","useState","baseUrl","setBaseUrl","useNavigate","useEffect","async","getAllUser","then","res","data","info","user","concat","process","catch","err","response","success","status","toast","error","message","list","columns","name","label","options","filter","sort","customBodyRender","image","_jsx","src","alt","style","height","width","borderRadius","defaultImg","_jsxs","_Fragment","children","ToastContainer","MUIDataTable","title","selectableRows"],"sourceRoot":""}