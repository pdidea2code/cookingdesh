{"version":3,"file":"static/js/31.d5b0db7e.chunk.js","mappings":"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","sources":["views/pages/recipe/step/Step.jsx","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/DeleteRounded.js","../node_modules/@mui/icons-material/esm/EditRounded.js"],"sourcesContent":["import { Button, IconButton } from '@mui/material'\nimport MUIDataTable from 'mui-datatables'\nimport React, { useEffect, useState } from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport * as Icons from '@mui/icons-material'\nimport { ToastContainer, toast } from 'react-toastify'\nimport swal from 'sweetalert'\nimport { deleteStep, deleteMultipleSteps, getRecipeWiseSteps } from 'src/redux/api/api'\n\nconst Step = () => {\n  const navigate = useNavigate()\n  const { state } = useLocation()\n  const [dataTableData, setDataTable] = useState([])\n  const [baseUrl, setBaseUrl] = useState([])\n\n  const fetchSteps = async () => {\n    try {\n      const res = await getRecipeWiseSteps(state.id)\n      const data = res.data.info.steps\n      const transformedData = data.map((step) => ({\n        ...step,\n        recipeId: step.recipeid,\n      }))\n      setBaseUrl(res.data.info.baseUrl)\n      setDataTable(transformedData)\n    } catch (err) {\n      console.log(err)\n      if (!err.response.data.success) {\n        if (err.response.data.status === 401) {\n          toast.error(err.response.data.message)\n        } else {\n          toast.error(err.response.data.message || 'Something went wrong!')\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    console.log(state)\n    fetchSteps()\n  }, [])\n\n  const columns = [\n    {\n      name: 'stepno',\n      label: 'Step No.',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'name',\n      label: 'Name',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'description',\n      label: 'Description',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'image',\n      label: 'Image',\n      options: {\n        filter: true,\n        sort: true,\n        customBodyRender: (value) => {\n          return value ? (\n            <img src={baseUrl + value} alt=\"step\" width=\"50\" height=\"50\" />\n          ) : (\n            <span>No Image</span>\n          )\n        },\n      },\n    },\n\n    {\n      name: '_id',\n      label: 'Action',\n      options: {\n        customBodyRender: (value) => {\n          return (\n            <div>\n              <Icons.EditRounded\n                className=\"editButton\"\n                onClick={() => {\n                  const editData = dataTableData.find((data) => data._id === value)\n                  navigate('/Step-form', {\n                    state: { editData: editData, imageUrl: baseUrl },\n                  })\n                }}\n              />\n              <Icons.DeleteRounded\n                className=\"deleteButton\"\n                onClick={async () => {\n                  const confirm = await swal({\n                    title: 'Are you sure?',\n                    text: 'Are you sure you want to delete this step? All related data will also be deleted.',\n                    icon: 'warning',\n                    buttons: ['No, cancel it!', 'Yes, I am sure!'],\n                    dangerMode: true,\n                  })\n                  if (confirm) {\n                    try {\n                      await deleteStep(value)\n                      toast.success('Deleted successfully!', {\n                        key: value,\n                      })\n                      fetchSteps()\n                    } catch {\n                      toast.error('Something went wrong!', {\n                        key: value,\n                      })\n                    }\n                  }\n                }}\n              />\n            </div>\n          )\n        },\n      },\n    },\n  ]\n\n  const deleteMultiple = async (selectedRows) => {\n    const ids = selectedRows.data.map((row) => dataTableData[row.dataIndex]._id)\n\n    const confirm = await swal({\n      title: 'Are you sure?',\n      text: 'Are you sure that you want to delete the selected steps?',\n      icon: 'warning',\n      buttons: ['No, cancel it!', 'Yes, I am sure!'],\n      dangerMode: true,\n    })\n\n    if (confirm) {\n      try {\n        await deleteMultipleSteps(ids)\n        toast.success('Deleted successfully!', {\n          key: ids.join(','),\n        })\n        fetchSteps()\n      } catch {\n        toast.error('Something went wrong!', {\n          key: ids.join(','),\n        })\n      }\n    }\n  }\n\n  const SelectedRowsToolbar = ({ selectedRows }) => {\n    return (\n      <div>\n        <IconButton onClick={() => deleteMultiple(selectedRows)}>\n          <Icons.Delete />\n        </IconButton>\n      </div>\n    )\n  }\n\n  const options = {\n    customToolbarSelect: (selectedRows, data) => (\n      <SelectedRowsToolbar selectedRows={selectedRows} data={data} columns={columns} />\n    ),\n  }\n\n  return (\n    <>\n      <ToastContainer />\n      <div className=\"right-text\">\n        <Button\n          variant=\"contained\"\n          size=\"medium\"\n          className=\"AddButton\"\n          onClick={() => navigate('/Step-form', { state: { id: state.id } })}\n        >\n          Add Step\n        </Button>\n      </div>\n      <MUIDataTable\n        title={'Recipe Steps List'}\n        data={dataTableData}\n        columns={columns}\n        options={options}\n      />\n    </>\n  )\n}\n\nexport default Step\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2zM18 4h-2.5l-.71-.71c-.18-.18-.44-.29-.7-.29H9.91c-.26 0-.52.11-.7.29L8.5 4H6c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1\"\n}), 'DeleteRounded');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.46v3.04c0 .28.22.5.5.5h3.04c.13 0 .26-.05.35-.15L17.81 9.94l-3.75-3.75L3.15 17.1c-.1.1-.15.22-.15.36M20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'EditRounded');"],"names":["Step","navigate","useNavigate","state","useLocation","dataTableData","setDataTable","useState","baseUrl","setBaseUrl","fetchSteps","async","res","getRecipeWiseSteps","id","transformedData","data","info","steps","map","step","recipeId","recipeid","err","console","log","response","success","status","toast","error","message","useEffect","columns","name","label","options","filter","sort","customBodyRender","value","_jsx","src","alt","width","height","children","_jsxs","Icons","className","onClick","editData","find","_id","imageUrl","swal","title","text","icon","buttons","dangerMode","deleteStep","key","SelectedRowsToolbar","_ref","selectedRows","IconButton","ids","row","dataIndex","deleteMultipleSteps","join","deleteMultiple","customToolbarSelect","_Fragment","ToastContainer","Button","variant","size","MUIDataTable","createSvgIcon","d"],"sourceRoot":""}