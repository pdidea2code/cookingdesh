{"version":3,"file":"static/js/404.f399adb4.chunk.js","mappings":"6PAKA,MA8FA,EA9FiBA,KACf,MAAOC,EAAeC,IAAgBC,EAAAA,EAAAA,UAAS,KACxCC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,KA2BvCG,EAAAA,EAAAA,YAAU,KAzBGC,iBACLC,EAAAA,EAAAA,MACHC,MAAMC,IACL,MACMC,EADOD,EAAIE,KAAKC,KAAKC,QACNC,KAAKD,IAAO,IAC5BA,EACHE,SAAUF,EAAQG,OAAOC,KACzBC,OAA4B,MAApBL,EAAQM,SAAmB,KAAON,EAAQM,SAASC,UAG7DhB,EAAWK,EAAIE,KAAKC,KAAKT,SACzBF,EAAaS,EAAQ,IAEtBW,OAAOC,IACNC,QAAQC,IAAIF,GACPA,EAAIG,SAASd,KAAKe,UACY,MAA7BJ,EAAIG,SAASd,KAAKgB,OACpBC,EAAAA,GAAMC,MAAMP,EAAIG,SAASd,KAAKmB,SAE9BF,EAAAA,GAAMC,MAAMP,EAAIG,SAASd,KAAM,QAEnC,GACA,EAIJoB,EAAM,GACL,IAGH,MAAMC,EAAU,CACd,CACEf,KAAM,UACNgB,MAAO,UACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACEnB,KAAM,SACNgB,MAAO,eACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACEnB,KAAM,WACNgB,MAAO,YACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACEnB,KAAM,QACNgB,MAAO,QACPC,QAAS,CACPG,iBAAmBC,GACjBA,GACEC,EAAAA,EAAAA,KAAA,OACEC,IAAKrC,EAAUmC,EACfG,IAAKH,EACLI,MAAO,CAAEC,OAAQ,OAAQC,MAAO,OAAQC,aAAc,UAGxDN,EAAAA,EAAAA,KAAA,QAAAO,SAAM,gBAUhB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAF,SAAA,EACEP,EAAAA,EAAAA,KAACU,EAAAA,GAAc,KACfV,EAAAA,EAAAA,KAACW,EAAAA,GAAY,CACX9B,MAAO,gBACPT,KAAMX,EACNgC,QAASA,EACTE,QAXU,CACdiB,eAAgB,YAYb,C","sources":["views/pages/comments/Comments.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport MUIDataTable from 'mui-datatables'\nimport { ToastContainer, toast } from 'react-toastify'\nimport { getAllComment } from 'src/redux/api/api' // Adjust the import based on your API method\n\nconst Comments = () => {\n  const [dataTableData, setDataTable] = useState([])\n  const [baseUrl, setBaseUrl] = useState('')\n\n  const list = async () => {\n    await getAllComment()\n      .then((res) => {\n        const data = res.data.info.comment\n        const trasfer = data.map((comment) => ({\n          ...comment,\n          username: comment.userid.name,\n          recipe: comment.recipeid == null ? null : comment.recipeid.title,\n        }))\n\n        setBaseUrl(res.data.info.baseUrl)\n        setDataTable(trasfer) // Adjust based on your API response\n      })\n      .catch((err) => {\n        console.log(err)\n        if (!err.response.data.success) {\n          if (err.response.data.status === 401) {\n            toast.error(err.response.data.message)\n          } else {\n            toast.error(err.response.data, 'else')\n          }\n        }\n      })\n  }\n\n  useEffect(() => {\n    list()\n  }, [])\n\n  // Define your columns here\n  const columns = [\n    {\n      name: 'comment',\n      label: 'Comment',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'recipe',\n      label: 'Recipe Title',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'username',\n      label: 'User Name',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'image',\n      label: 'Image',\n      options: {\n        customBodyRender: (image) =>\n          image ? (\n            <img\n              src={baseUrl + image}\n              alt={image}\n              style={{ height: '50px', width: '50px', borderRadius: '50%' }}\n            />\n          ) : (\n            <span>No Image</span>\n          ),\n      },\n    },\n  ]\n\n  const options = {\n    selectableRows: 'none',\n  }\n\n  return (\n    <>\n      <ToastContainer />\n      <MUIDataTable\n        title={'Comments List'}\n        data={dataTableData}\n        columns={columns}\n        options={options}\n      />\n    </>\n  )\n}\n\nexport default Comments\n"],"names":["Comments","dataTableData","setDataTable","useState","baseUrl","setBaseUrl","useEffect","async","getAllComment","then","res","trasfer","data","info","comment","map","username","userid","name","recipe","recipeid","title","catch","err","console","log","response","success","status","toast","error","message","list","columns","label","options","filter","sort","customBodyRender","image","_jsx","src","alt","style","height","width","borderRadius","children","_jsxs","_Fragment","ToastContainer","MUIDataTable","selectableRows"],"sourceRoot":""}