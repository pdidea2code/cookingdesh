{"version":3,"file":"static/js/18.ba5e0c29.chunk.js","mappings":"6TAsBA,MA4GA,EA5GuBA,KACrB,MAAM,SAAEC,EAAQ,aAAEC,IAAiBC,EAAAA,EAAAA,OAC5BC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,IAE7BG,EAAcC,EAAAA,EAAQC,IAAI,SAC1BC,EAAQC,KAAKC,MAAML,GA0BzB,OACEM,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BC,UAC1CF,EAAAA,EAAAA,KAACG,EAAAA,GAAU,CAACF,UAAU,oBAAmBC,UACvCF,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAAAF,UACHF,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAAAH,UACHF,EAAAA,EAAAA,KAACM,EAAAA,GAAU,CAAAJ,UACTF,EAAAA,EAAAA,KAACO,EAAAA,GAAK,CAACN,UAAU,MAAKC,UACpBF,EAAAA,EAAAA,KAACQ,EAAAA,GAAS,CAAAN,UACRO,EAAAA,EAAAA,MAACC,EAAAA,GAAK,CAACC,SAAUxB,GAhChByB,MAAOC,EAAMC,KAC5BxB,GAAa,IACbyB,EAAAA,EAAAA,IAAeF,GACZG,MAAMC,IAEc,MAAfA,EAAIC,QAAkBD,EAAIJ,KAAKM,SACjCL,EAAEM,OAAOC,QAETC,EAAAA,GAAMH,QAAQF,EAAIJ,KAAKU,SACvBjC,GAAa,KAEbG,EAASwB,EAAIJ,KAAKU,SAClBjC,GAAa,GACf,IAEDkC,OAAOC,IACNC,QAAQC,IAAIF,EAAIG,UACZH,EAAIG,SAASV,OACfI,EAAAA,GAAM9B,MAAMiC,EAAIG,SAASf,KAAKU,SAC9BjC,GAAa,EACf,GACA,IAWkDY,SAAA,EACtCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAkBC,SAAC,qBACjCF,EAAAA,EAAAA,KAAC6B,EAAAA,GAAc,KACf7B,EAAAA,EAAAA,KAAA,OAAK8B,GAAItC,EAAMU,UACbF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,SAAQC,SAAEV,GAAgB,QAEzCiB,EAAAA,EAAAA,MAACsB,EAAAA,GAAW,CAAC9B,UAAU,OAAMC,SAAA,EAC3BF,EAAAA,EAAAA,KAACgC,EAAAA,GAAU,IAAK9C,EAAS,OAAQ+C,KAAK,SAASC,MAAOrC,EAAMsC,MAE5DnC,EAAAA,EAAAA,KAACoC,EAAAA,GAAe,CAAAlC,UACdF,EAAAA,EAAAA,KAACqC,EAAAA,EAAK,CAACC,KAAMC,EAAAA,OAEfvC,EAAAA,EAAAA,KAACgC,EAAAA,GAAU,IACL9C,EAAS,cAAe,CAAEsD,SAAU,6BACxCP,KAAK,WACLQ,YAAY,cACZC,aAAa,yBAIjBjC,EAAAA,EAAAA,MAACsB,EAAAA,GAAW,CAAC9B,UAAU,OAAMC,SAAA,EAC3BF,EAAAA,EAAAA,KAACoC,EAAAA,GAAe,CAAAlC,UACdF,EAAAA,EAAAA,KAACqC,EAAAA,EAAK,CAACC,KAAMK,EAAAA,OAEf3C,EAAAA,EAAAA,KAACgC,EAAAA,GAAU,IACL9C,EAAS,cAAe,CAAEsD,SAAU,6BACxCP,KAAK,WACLQ,YAAY,eACZC,aAAa,yBAIjBjC,EAAAA,EAAAA,MAACsB,EAAAA,GAAW,CAAC9B,UAAU,OAAMC,SAAA,EAC3BF,EAAAA,EAAAA,KAACoC,EAAAA,GAAe,CAAAlC,UACdF,EAAAA,EAAAA,KAACqC,EAAAA,EAAK,CAACC,KAAMK,EAAAA,OAEf3C,EAAAA,EAAAA,KAACgC,EAAAA,GAAU,IACL9C,EAAS,kBAAmB,CAC9BsD,SAAU,iCAEZP,KAAK,WACLQ,YAAY,mBACZC,aAAa,yBAIjB1C,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACH,UAAU,gBAAeC,UAC7BF,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACuC,GAAI,GAAIC,GAAI,EAAG5C,UAAU,eAAcC,UAC3CF,EAAAA,EAAAA,KAAC8C,EAAAA,GAAO,CACNb,KAAK,SACLhC,UAAU,qBACV8C,MAAO,CAAEC,OAAQ3D,EAAY,cAAgB,WAAYa,SAExDb,EAAY,aAAe,uCAW5C,C","sources":["views/pages/auth/ChangePassword.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport {\n  CContainer,\n  CRow,\n  CCol,\n  CCard,\n  CCardGroup,\n  CCardBody,\n  CForm,\n  CInputGroup,\n  CInputGroupText,\n  CFormInput,\n  CButton,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { changePassword } from 'src/redux/api/api'\nimport Cookies from 'js-cookie'\n\nconst ChangePassword = () => {\n  const { register, handleSubmit } = useForm()\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState('')\n\n  const adminString = Cookies.get('admin')\n  const admin = JSON.parse(adminString)\n\n  const onSubmit = async (data, e) => {\n    setIsLoading(true)\n    changePassword(data)\n      .then((res) => {\n        // console.log(res)\n        if (res.status === 200 && res.data.success) {\n          e.target.reset()\n\n          toast.success(res.data.message)\n          setIsLoading(false)\n        } else {\n          setError(res.data.message)\n          setIsLoading(false)\n        }\n      })\n      .catch((err) => {\n        console.log(err.response)\n        if (err.response.status === 401 || 400) {\n          toast.error(err.response.data.message)\n          setIsLoading(false)\n        }\n      })\n  }\n\n  return (\n    <div className=\"bg-light min-vh-100 profile\">\n      <CContainer className=\"profile-container\">\n        <CRow>\n          <CCol>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm onSubmit={handleSubmit(onSubmit)}>\n                    <h2 className=\"text-center mb-4\">Change Password</h2>\n                    <ToastContainer />\n                    <div in={error}>\n                      <p className=\"errors\">{error ? error : ''}</p>\n                    </div>\n                    <CInputGroup className=\"mb-4\">\n                      <CFormInput {...register('_id')} type=\"hidden\" value={admin.id} />\n\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput\n                        {...register('oldPassword', { required: 'Old Password is required' })}\n                        type=\"password\"\n                        placeholder=\"oldPassword\"\n                        autoComplete=\"current-password\"\n                      />\n                    </CInputGroup>\n\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        {...register('newPassword', { required: 'New password is required' })}\n                        type=\"password\"\n                        placeholder=\"new-password\"\n                        autoComplete=\"current-password\"\n                      />\n                    </CInputGroup>\n\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        {...register('confirmPassword', {\n                          required: 'confirm password is required',\n                        })}\n                        type=\"password\"\n                        placeholder=\"confirm Password\"\n                        autoComplete=\"current-password\"\n                      />\n                    </CInputGroup>\n\n                    <CRow className=\"update-button\">\n                      <CCol xs={12} md={4} className=\"mb-2 mb-md-0\">\n                        <CButton\n                          type=\"submit\"\n                          className=\"w-100 custom-color\"\n                          style={{ cursor: isLoading ? 'not-allowed' : 'pointer' }}\n                        >\n                          {isLoading ? 'Loading...' : 'Reset Password'}\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default ChangePassword\n"],"names":["ChangePassword","register","handleSubmit","useForm","isLoading","setIsLoading","useState","error","setError","adminString","Cookies","get","admin","JSON","parse","_jsx","className","children","CContainer","CRow","CCol","CCardGroup","CCard","CCardBody","_jsxs","CForm","onSubmit","async","data","e","changePassword","then","res","status","success","target","reset","toast","message","catch","err","console","log","response","ToastContainer","in","CInputGroup","CFormInput","type","value","id","CInputGroupText","CIcon","icon","cilUser","required","placeholder","autoComplete","cilLockLocked","xs","md","CButton","style","cursor"],"sourceRoot":""}