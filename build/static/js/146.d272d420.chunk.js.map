{"version":3,"file":"static/js/146.d272d420.chunk.js","mappings":"6RAsBA,MA0KA,EA1KqBA,KACnB,MAAM,SACJC,EAAQ,UACRC,EAAS,SACTC,EAAQ,aACRC,EAAY,QACZC,EAAO,YACPC,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,MAEEC,GAAWC,EAAAA,EAAAA,OACVC,EAAQC,IAAaC,EAAAA,EAAAA,aACrBC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,IAErC,MAAEK,IAAUC,EAAAA,EAAAA,MA4ElB,OAVAC,EAAAA,EAAAA,YAAU,KACR,GAAIF,EAAO,CACT,MAAM,SAAEG,EAAQ,SAAEC,GAAaJ,EAC/BH,EAAYM,EAASE,KACrBrB,EAAS,OAAQmB,EAASG,MAE1BZ,EAAUU,EAAWD,EAASI,MAChC,IAEC,KAEDC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,UACnCF,EAAAA,EAAAA,KAACG,EAAAA,GAAU,CAACF,UAAU,OAAMC,UAC1BF,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAAAF,UACHF,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAI,EAAEJ,UACVK,EAAAA,EAAAA,MAACC,EAAAA,GAAK,CAAAN,SAAA,EACJF,EAAAA,EAAAA,KAACS,EAAAA,GAAW,CAAAP,UACVF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,qBAEVK,EAAAA,EAAAA,MAACG,EAAAA,GAAS,CAAAR,SAAA,EACRF,EAAAA,EAAAA,KAACW,EAAAA,GAAc,KACfJ,EAAAA,EAAAA,MAACK,EAAAA,GAAK,CAACX,UAAU,WAAWY,SAAUpC,GA3DlCqC,IAChB,IAAIC,EAAW,IAAIC,SACnBC,OAAOC,KAAKJ,GAAMK,SAAQ,SAAUC,GACtB,UAARA,OACmBC,IAAjBP,EAAKM,GAAK,IACZL,EAASO,OAAOF,EAAKN,EAAKM,GAAK,IAGjCL,EAASO,OAAOF,EAAKN,EAAKM,GAE9B,IAEa,KAAbhC,GACImC,EAAAA,EAAAA,IAAYR,GACTS,MAAMC,IACL1C,EAAS,YAAY,IAEtB2C,OAAOC,IACDA,EAAIC,SAASd,KAAKe,QAGrBtC,GAAa,GAFbuC,EAAAA,GAAMC,MAAMJ,EAAIC,SAASd,KAAKkB,QAGhC,KAEJC,EAAAA,EAAAA,IAAelB,EAAU3B,GACtBoC,MAAMC,IACL1C,EAAS,YAAY,IAEtB2C,OAAOC,IACNO,QAAQC,IAAIR,GACPA,EAAIC,SAASd,KAAKe,QAGrBC,EAAAA,GAAMC,MAAM,yBAFZD,EAAAA,GAAMC,MAAM,mCAIdxC,GAAa,EAAM,GACnB,IAuBiEW,SAAA,EAE3DK,EAAAA,EAAAA,MAACF,EAAAA,GAAI,CAAC+B,GAAI,EAAG9B,GAAI,GAAGJ,SAAA,EAClBF,EAAAA,EAAAA,KAACqC,EAAAA,GAAU,CAAAnC,SAAC,mBACZF,EAAAA,EAAAA,KAACsC,EAAAA,GAAU,CACTC,KAAK,OACLC,GAAG,UACClE,EAAS,OAAQ,CAAEmE,SAAU,8BACjCC,UAAW7D,EAAOiB,KAClB6C,YAAY,mBAEd3C,EAAAA,EAAAA,KAAC4C,EAAAA,GAAa,CAACF,SAAO,EAAAxC,SAAC,kCAKzBK,EAAAA,EAAAA,MAACF,EAAAA,GAAI,CAAC+B,GAAI,EAAG9B,GAAI,GAAGJ,SAAA,EAClBK,EAAAA,EAAAA,MAAC8B,EAAAA,GAAU,CAAAnC,SAAA,CAAC,gBAEVF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,SAAQC,SAAC,iDAE3BF,EAAAA,EAAAA,KAACsC,EAAAA,GAAU,CACTC,KAAK,OACLC,GAAG,WACClE,EAAS,SACbuE,SAxGMC,IACxB,MAAMC,EAAQD,EAAEE,OAAOD,MAAM,GAC7B,GAAIA,EAAO,CACT,MAAMnD,EAAWqD,IAAIC,gBAAgBH,GACrC7D,EAAUU,EAEZ,MACEV,EAAU,GACZ,QAmGcc,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAI,EAAEJ,SACTjB,IACCsB,EAAAA,EAAAA,MAAA4C,EAAAA,SAAA,CAAAjD,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,mBACHF,EAAAA,EAAAA,KAAA,OACEoD,IAAKnE,EACLoE,IAAI,SACJC,MAAO,CACLC,SAAU,MACVC,aAAc,OACdC,UAAW,eAOrBzD,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAI,GAAIL,UAAU,2BAA0BC,SAC/CZ,GACCiB,EAAAA,EAAAA,MAACmD,EAAAA,GAAO,CAACC,UAAQ,EAAAzD,SAAA,EACfF,EAAAA,EAAAA,KAAC4D,EAAAA,GAAQ,CAACC,UAAU,OAAOC,KAAK,KAAK,cAAY,SAAS,iBAI5D9D,EAAAA,EAAAA,KAAC0D,EAAAA,GAAO,CAACnB,KAAK,SAAStC,UAAU,YAAWC,SAC5B,KAAbd,EAAkB,MAAQ,6BAUzC,C","sources":["views/pages/category/CategoryForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CContainer,\n  CForm,\n  CFormFeedback,\n  CFormInput,\n  CFormLabel,\n  CRow,\n  CSpinner,\n  CFormSelect,\n} from '@coreui/react'\nimport { useForm } from 'react-hook-form'\nimport { addCategory, updateCategory } from 'src/redux/api/api'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nconst CategoryForm = () => {\n  const {\n    register,\n    getValues,\n    setValue,\n    handleSubmit,\n    control,\n    clearErrors,\n    formState: { errors },\n  } = useForm()\n\n  const navigate = useNavigate()\n  const [newUrl, setNewUrl] = useState()\n  const [isUpdate, setIsUpdate] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  // const [languageOptions, setLanguageOptions] = useState([])\n  const { state } = useLocation()\n  const handleChange = async (fieldName, fieldValue) => {\n    clearErrors(fieldName, fieldValue)\n    // if (fieldName == 'languages') {\n      setValue(fieldName, fieldValue)\n    // }\n  }\n\n  const handleFileUpload = (e) => {\n    const files = e.target.files[0]\n    if (files) {\n      const imageUrl = URL.createObjectURL(files)\n      setNewUrl(imageUrl)\n      // clearErrors('newsImage')\n    } else {\n      setNewUrl('')\n    }\n  }\n  // const LanguagesList = () => {\n  //   getAllLanguage()\n  //     .then((res) => {\n  //       setLanguageOptions(res.data.language)\n  //     })\n  //     .catch((err) => {\n  //       toast.error(err)\n  //     })\n  // }\n\n  const onSubmit = (data) => {\n    let formData = new FormData() //formdata object\n    Object.keys(data).forEach(function (key) {\n      if (key === 'image') {\n        if (data[key][0] !== undefined) {\n          formData.append(key, data[key][0])\n        }\n      } else {\n        formData.append(key, data[key])\n      }\n    })\n    \n    isUpdate === ''\n      ? addCategory(formData)\n          .then((res) => {\n            navigate('/category')\n          })\n          .catch((err) => {\n            if (!err.response.data.success) {\n              toast.error(err.response.data.message)\n            } else {\n              setIsLoading(false)\n            }\n          })\n      : updateCategory(formData, isUpdate)\n          .then((res) => {\n            navigate('/category')\n          })\n          .catch((err) => {\n            console.log(err);\n            if (!err.response.data.success) {\n              toast.error('Must be Fill All Field required')\n            } else {\n              toast.error('Something Went Wrong!')\n            }\n            setIsLoading(false)\n          })\n  }\n  useEffect(() => {\n    if (state) {\n      const { editData, imageUrl } = state\n      setIsUpdate(editData._id)\n      setValue('name', editData.name)\n      // setValue('languages', editData.languages._id)\n      setNewUrl(imageUrl + editData.image)\n    }\n    // LanguagesList()\n  }, [])\n  return (\n    <div className=\" bg-light min-vh-100\">\n      <CContainer className=\"mt-3\">\n        <CRow>\n          <CCol md={8}>\n            <CCard>\n              <CCardHeader>\n                <strong>Category Form</strong>\n              </CCardHeader>\n              <CCardBody>\n                <ToastContainer />\n                <CForm className=\"row g-3 \" onSubmit={handleSubmit(onSubmit)}>\n                  {/* Category Name field */}\n                  <CCol xl={6} md={12}>\n                    <CFormLabel>Category Name</CFormLabel>\n                    <CFormInput\n                      type=\"text\"\n                      id=\"name\"\n                      {...register('name', { required: 'category Name is required' })}\n                      invalid={!!errors.name}\n                      placeholder=\"category Name\"\n                    />\n                    <CFormFeedback invalid>category Name is required</CFormFeedback>\n                  </CCol>\n                  {/* end field */}\n\n                \n                  <CCol xl={6} md={12}>\n                    <CFormLabel>\n                      Recipe Image\n                      <span className=\"errors\">Only png, jpg, webp and jpeg image allow</span>\n                    </CFormLabel>\n                    <CFormInput\n                      type=\"file\"\n                      id=\"image\"\n                      {...register('image')}\n                      onChange={handleFileUpload}\n                    />\n                  </CCol>\n                  <CCol md={6}>\n                    {newUrl && (\n                      <>\n                        <p>Image preview</p>\n                        <img\n                          src={newUrl}\n                          alt=\"newUrl\"\n                          style={{\n                            maxWidth: '40%',\n                            borderRadius: '10px',\n                            maxHeight: '40%',\n                          }}\n                        />\n                      </>\n                    )}\n                  </CCol>\n\n                  <CCol md={12} className=\"text-center submitButton\">\n                    {isLoading ? (\n                      <CButton disabled>\n                        <CSpinner component=\"span\" size=\"sm\" aria-hidden=\"true\" />\n                        Loading...\n                      </CButton>\n                    ) : (\n                      <CButton type=\"submit\" className=\"AddButton\">\n                        {isUpdate === '' ? 'Add' : 'Update'}\n                      </CButton>\n                    )}\n                  </CCol>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default CategoryForm\n"],"names":["CategoryForm","register","getValues","setValue","handleSubmit","control","clearErrors","formState","errors","useForm","navigate","useNavigate","newUrl","setNewUrl","useState","isUpdate","setIsUpdate","isLoading","setIsLoading","state","useLocation","useEffect","editData","imageUrl","_id","name","image","_jsx","className","children","CContainer","CRow","CCol","md","_jsxs","CCard","CCardHeader","CCardBody","ToastContainer","CForm","onSubmit","data","formData","FormData","Object","keys","forEach","key","undefined","append","addCategory","then","res","catch","err","response","success","toast","error","message","updateCategory","console","log","xl","CFormLabel","CFormInput","type","id","required","invalid","placeholder","CFormFeedback","onChange","e","files","target","URL","createObjectURL","_Fragment","src","alt","style","maxWidth","borderRadius","maxHeight","CButton","disabled","CSpinner","component","size"],"sourceRoot":""}