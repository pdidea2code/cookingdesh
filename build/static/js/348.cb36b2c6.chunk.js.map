{"version":3,"file":"static/js/348.cb36b2c6.chunk.js","mappings":"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","sources":["views/pages/diet/DietForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CFormFeedback,\r\n  CFormInput,\r\n  CFormLabel,\r\n  CRow,\r\n  CSpinner,\r\n  CFormSelect,\r\n} from '@coreui/react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { addDiet, updateDiet } from 'src/redux/api/api'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nconst DietForm = () => {\r\n  const {\r\n    register,\r\n    getValues,\r\n    setValue,\r\n    handleSubmit,\r\n    control,\r\n    clearErrors,\r\n    formState: { errors },\r\n  } = useForm()\r\n\r\n  const navigate = useNavigate()\r\n  const [newUrl, setNewUrl] = useState()\r\n  const [isUpdate, setIsUpdate] = useState('')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  // const [languageOptions, setLanguageOptions] = useState([])\r\n  const { state } = useLocation()\r\n  const handleChange = async (fieldName, fieldValue) => {\r\n    clearErrors(fieldName, fieldValue)\r\n    // if (fieldName == 'languages') {\r\n    setValue(fieldName, fieldValue)\r\n    // }\r\n  }\r\n\r\n  const handleFileUpload = (e) => {\r\n    const files = e.target.files[0]\r\n    if (files) {\r\n      const imageUrl = URL.createObjectURL(files)\r\n      setNewUrl(imageUrl)\r\n      // clearErrors('newsImage')\r\n    } else {\r\n      setNewUrl('')\r\n    }\r\n  }\r\n  // const LanguagesList = () => {\r\n  //   getAllLanguage()\r\n  //     .then((res) => {\r\n  //       setLanguageOptions(res.data.language)\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       toast.error(err)\r\n  //     })\r\n  // }\r\n\r\n  const onSubmit = (data) => {\r\n    let formData = new FormData() //formdata object\r\n    Object.keys(data).forEach(function (key) {\r\n      if (key === 'image') {\r\n        if (data[key][0] !== undefined) {\r\n          formData.append(key, data[key][0])\r\n        }\r\n      } else {\r\n        formData.append(key, data[key])\r\n      }\r\n    })\r\n\r\n    isUpdate === ''\r\n      ? addDiet(formData)\r\n          .then((res) => {\r\n            navigate('/diet')\r\n          })\r\n          .catch((err) => {\r\n            if (!err.response.data.success) {\r\n              toast.error(err.response.data.message)\r\n            } else {\r\n              setIsLoading(false)\r\n            }\r\n          })\r\n      : updateDiet(formData, isUpdate)\r\n          .then((res) => {\r\n            navigate('/diet')\r\n          })\r\n          .catch((err) => {\r\n            console.log(err)\r\n            if (!err.response.data.success) {\r\n              toast.error('Must be Fill All Field required')\r\n            } else {\r\n              toast.error('Something Went Wrong!')\r\n            }\r\n            setIsLoading(false)\r\n          })\r\n  }\r\n  useEffect(() => {\r\n    if (state) {\r\n      const { editData, imageUrl } = state\r\n      setIsUpdate(editData._id)\r\n      setValue('name', editData.name)\r\n      // setValue('languages', editData.languages._id)\r\n      setNewUrl(imageUrl + editData.image)\r\n    }\r\n    // LanguagesList()\r\n  }, [])\r\n  return (\r\n    <div className=\" bg-light min-vh-100\">\r\n      <CContainer className=\"mt-3\">\r\n        <CRow>\r\n          <CCol md={8}>\r\n            <CCard>\r\n              <CCardHeader>\r\n                <strong>Diet Form</strong>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <ToastContainer />\r\n                <CForm className=\"row g-3 \" onSubmit={handleSubmit(onSubmit)}>\r\n                  {/* Diet Name field */}\r\n                  <CCol xl={6} md={12}>\r\n                    <CFormLabel>Diet Name</CFormLabel>\r\n                    <CFormInput\r\n                      type=\"text\"\r\n                      id=\"name\"\r\n                      {...register('name', { required: 'diet Name is required' })}\r\n                      invalid={!!errors.name}\r\n                      placeholder=\"diet Name\"\r\n                    />\r\n                    <CFormFeedback invalid>diet Name is required</CFormFeedback>\r\n                  </CCol>\r\n                  {/* end field */}\r\n\r\n                  <CCol xl={6} md={12}>\r\n                    <CFormLabel>\r\n                      Diet Image\r\n                      <span className=\"errors\">Only png, jpg, webp and jpeg image allow</span>\r\n                    </CFormLabel>\r\n                    <CFormInput\r\n                      type=\"file\"\r\n                      id=\"image\"\r\n                      {...register('image')}\r\n                      onChange={handleFileUpload}\r\n                    />\r\n                  </CCol>\r\n                  <CCol md={6}>\r\n                    {newUrl && (\r\n                      <>\r\n                        <p>Image preview</p>\r\n                        <img\r\n                          src={newUrl}\r\n                          alt=\"newUrl\"\r\n                          style={{\r\n                            maxWidth: '40%',\r\n                            borderRadius: '10px',\r\n                            maxHeight: '40%',\r\n                          }}\r\n                        />\r\n                      </>\r\n                    )}\r\n                  </CCol>\r\n\r\n                  <CCol md={12} className=\"text-center submitButton\">\r\n                    {isLoading ? (\r\n                      <CButton disabled>\r\n                        <CSpinner component=\"span\" size=\"sm\" aria-hidden=\"true\" />\r\n                        Loading...\r\n                      </CButton>\r\n                    ) : (\r\n                      <CButton type=\"submit\" className=\"AddButton\">\r\n                        {isUpdate === '' ? 'Add' : 'Update'}\r\n                      </CButton>\r\n                    )}\r\n                  </CCol>\r\n                </CForm>\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DietForm\r\n"],"names":["DietForm","register","getValues","setValue","handleSubmit","control","clearErrors","formState","errors","useForm","navigate","useNavigate","newUrl","setNewUrl","useState","isUpdate","setIsUpdate","isLoading","setIsLoading","state","useLocation","useEffect","editData","imageUrl","_id","name","image","_jsx","className","children","CContainer","CRow","CCol","md","_jsxs","CCard","CCardHeader","CCardBody","ToastContainer","CForm","onSubmit","data","formData","FormData","Object","keys","forEach","key","undefined","append","addDiet","then","res","catch","err","response","success","toast","error","message","updateDiet","console","log","xl","CFormLabel","CFormInput","type","id","required","invalid","placeholder","CFormFeedback","onChange","e","files","target","URL","createObjectURL","_Fragment","src","alt","style","maxWidth","borderRadius","maxHeight","CButton","disabled","CSpinner","component","size"],"sourceRoot":""}