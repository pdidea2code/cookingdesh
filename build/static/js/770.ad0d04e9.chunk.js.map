{"version":3,"file":"static/js/770.ad0d04e9.chunk.js","mappings":"kTAUA,MA6HA,EA7HaA,KACX,MAAOC,EAAeC,IAAgBC,EAAAA,EAAAA,UAAS,KAExCC,EAASC,KADCC,EAAAA,EAAAA,OACaH,EAAAA,EAAAA,UAAS,KAEjCI,EAAOC,gBACLC,EAAAA,EAAAA,MACHC,MAAMC,IACLT,EAAaS,EAAIC,KAAKC,KAAKC,MAC3BT,EAAW,GAADU,OAAIC,6CAA0C,IAEzDC,OAAOC,IACDA,EAAIC,SAASP,KAAKQ,UACY,MAA7BF,EAAIC,SAASP,KAAKS,OACpBC,EAAAA,GAAMC,MAAML,EAAIC,SAASP,KAAKY,SAE9BF,EAAAA,GAAMC,MAAML,EAAIC,SAASP,KAAM,QAEnC,GACA,GAGNa,EAAAA,EAAAA,YAAU,KACRlB,GAAM,GACL,IAEH,MAAMmB,EAAU,CACd,CACEC,KAAM,OACNC,MAAO,OACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACEJ,KAAM,QACNC,MAAO,QACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACEJ,KAAM,OACNC,MAAO,WACPC,QAAS,CACPC,QAAQ,EACRC,MAAM,IAGV,CACEJ,KAAM,QACNC,MAAO,QACPC,QAAS,CACPG,iBAAmBC,GACjBA,GACEC,EAAAA,EAAAA,KAAA,OACEC,IAAG,GAAApB,OAAKC,6CAAuCD,OAAGkB,GAClDG,IAAKH,EACLI,MAAO,CAAEC,OAAQ,OAAQC,MAAO,OAAQC,aAAc,UAGxDN,EAAAA,EAAAA,KAAA,OACEC,IAAKM,EACLL,IAAKH,EACLI,MAAO,CAAEC,OAAQ,OAAQC,MAAO,OAAQC,aAAc,WAKhE,CACEb,KAAM,MACNC,MAAO,SACPC,QAAS,CACPG,iBAAmBU,IACjBR,EAAAA,EAAAA,KAACS,EAAAA,EAAmB,CAClBC,UAAU,eACVC,QAASrC,UAQP,SAPsBsC,IAAK,CACzBC,MAAO,gBACPC,KAAM,qCACNC,KAAM,UACNC,QAAS,CAAC,iBAAkB,mBAC5BC,YAAY,IAED,CACX,MAAMvC,EAAO,CACXwC,GAAIV,IAENW,EAAAA,EAAAA,IAAWzC,GACRF,MAAK,KACJH,IACAe,EAAAA,GAAMF,QAAQ,wBAAwB,IAOvCH,OAAOM,IAAW,IAAD+B,EAAAC,EAChBC,QAAQC,IAAIlC,GACZ,MAAMmC,GAAyB,QAAdJ,EAAA/B,EAAMJ,gBAAQ,IAAAmC,GAAM,QAANC,EAAdD,EAAgB1C,YAAI,IAAA2C,OAAN,EAAdA,EAAsB/B,UAAW,uBAClDF,EAAAA,GAAMC,MAAMmC,EAAS,GAE3B,QAYZ,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACE3B,EAAAA,EAAAA,KAAC4B,EAAAA,GAAc,KACf5B,EAAAA,EAAAA,KAAC6B,EAAAA,GAAY,CAAChB,MAAO,YAAanC,KAAMX,EAAeyB,QAASA,EAASG,QAP7D,CACdmC,eAAgB,YAOb,C,6DC/HP,SAAeC,EAAAA,EAAAA,IAA4B/B,EAAAA,EAAAA,KAAK,OAAQ,CACtDgC,EAAG,kNACD,gB","sources":["views/pages/user/User.jsx","../node_modules/@mui/icons-material/esm/DeleteRounded.js"],"sourcesContent":["import { Button, IconButton, Switch } from '@mui/material'\nimport MUIDataTable from 'mui-datatables'\nimport React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport * as Icons from '@mui/icons-material'\nimport { ToastContainer, toast } from 'react-toastify'\nimport { deleteUser, getAllUser } from 'src/redux/api/api'\nimport swal from 'sweetalert'\nimport defaultImg from '../../../../src/assets/images/default.png'\n\nconst User = () => {\n  const [dataTableData, setDataTable] = useState([])\n  const navigate = useNavigate()\n  const [baseUrl, setBaseUrl] = useState('')\n\n  const list = async () => {\n    await getAllUser()\n      .then((res) => {\n        setDataTable(res.data.info.user)\n        setBaseUrl(`${process.env.REACT_APP_USER_PROFILE_PATH}`)\n      })\n      .catch((err) => {\n        if (!err.response.data.success) {\n          if (err.response.data.status === 401) {\n            toast.error(err.response.data.message)\n          } else {\n            toast.error(err.response.data, 'else')\n          }\n        }\n      })\n  }\n\n  useEffect(() => {\n    list()\n  }, [])\n\n  const columns = [\n    {\n      name: 'name',\n      label: 'Name',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'email',\n      label: 'Email',\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: 'mono',\n      label: 'MobileNo',\n      options: {\n        filter: true,\n        sort: false,\n      },\n    },\n    {\n      name: 'image',\n      label: 'Image',\n      options: {\n        customBodyRender: (image) =>\n          image ? (\n            <img\n              src={`${process.env.REACT_APP_USER_PROFILE_PATH}${image}`}\n              alt={image}\n              style={{ height: '50px', width: '50px', borderRadius: '50%' }}\n            />\n          ) : (\n            <img\n              src={defaultImg}\n              alt={image}\n              style={{ height: '50px', width: '50px', borderRadius: '50%' }}\n            />\n          ),\n      },\n    },\n    {\n      name: '_id',\n      label: 'Action',\n      options: {\n        customBodyRender: (value) => (\n          <Icons.DeleteRounded\n            className=\"deleteButton\"\n            onClick={async () => {\n              const confirm = await swal({\n                title: 'Are you sure?',\n                text: 'Are you sure? Want to delete User?',\n                icon: 'warning',\n                buttons: ['No, cancel it!', 'Yes, I am sure!'],\n                dangerMode: true,\n              })\n              if (confirm) {\n                const data = {\n                  id: value,\n                }\n                deleteUser(data)\n                  .then(() => {\n                    list()\n                    toast.success('Deleted successfully!')\n                    // swal({\n                    //   title: 'Deleted successfully!',\n                    //   icon: 'success',\n                    //   button: 'close',\n                    // })\n                  })\n                  .catch((error) => {\n                    console.log(error)\n                    const errorMsg = error.response?.data?.message || 'Something went wrong'\n                    toast.error(errorMsg)\n                  })\n              }\n            }}\n          />\n        ),\n      },\n    },\n  ]\n\n  const options = {\n    selectableRows: 'none',\n  }\n\n  return (\n    <>\n      <ToastContainer />\n      <MUIDataTable title={'User List'} data={dataTableData} columns={columns} options={options} />\n    </>\n  )\n}\n\nexport default User\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2zM18 4h-2.5l-.71-.71c-.18-.18-.44-.29-.7-.29H9.91c-.26 0-.52.11-.7.29L8.5 4H6c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1\"\n}), 'DeleteRounded');"],"names":["User","dataTableData","setDataTable","useState","baseUrl","setBaseUrl","useNavigate","list","async","getAllUser","then","res","data","info","user","concat","process","catch","err","response","success","status","toast","error","message","useEffect","columns","name","label","options","filter","sort","customBodyRender","image","_jsx","src","alt","style","height","width","borderRadius","defaultImg","value","Icons","className","onClick","swal","title","text","icon","buttons","dangerMode","id","deleteUser","_error$response","_error$response$data","console","log","errorMsg","_jsxs","_Fragment","children","ToastContainer","MUIDataTable","selectableRows","createSvgIcon","d"],"sourceRoot":""}