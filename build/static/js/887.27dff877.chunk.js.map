{"version":3,"file":"static/js/887.27dff877.chunk.js","mappings":"6RAsBA,MAkGA,EAlGiBA,KACf,MAAM,SACJC,EAAQ,UACRC,EAAS,SACTC,EAAQ,aACRC,EAAY,YACZC,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,MACEC,GAAWC,EAAAA,EAAAA,OACVC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACrC,MAAEG,IAAUC,EAAAA,EAAAA,MAuClB,OARAC,EAAAA,EAAAA,YAAU,KACR,GAAIF,EAAO,CACT,MAAM,SAAEG,GAAaH,EAErBJ,EAAYO,EAASC,KACrBjB,EAAS,OAAQgB,EAASE,KAC5B,IACC,KAEDC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,UACnCF,EAAAA,EAAAA,KAACG,EAAAA,GAAU,CAACF,UAAU,OAAMC,UAC1BF,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAAAF,UACHF,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAI,EAAEJ,UACVK,EAAAA,EAAAA,MAACC,EAAAA,GAAK,CAAAN,SAAA,EACJF,EAAAA,EAAAA,KAACS,EAAAA,GAAW,CAAAP,UACVF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,iBAEVK,EAAAA,EAAAA,MAACG,EAAAA,GAAS,CAAAR,SAAA,EACRF,EAAAA,EAAAA,KAACW,EAAAA,GAAc,KACfJ,EAAAA,EAAAA,MAACK,EAAAA,GAAK,CAACX,UAAU,WAAWY,SAAU/B,GA7ClCgC,IACH,KAAbzB,GACI0B,EAAAA,EAAAA,IAAQD,GACLE,MAAMC,IACL9B,EAAS,QAAQ,IAElB+B,OAAOC,IACDA,EAAIC,SAASN,KAAKO,QAGrB5B,GAAa,GAFb6B,EAAAA,GAAMC,MAAMJ,EAAIC,SAASN,KAAKU,QAGhC,KAEJC,EAAAA,EAAAA,IAAWX,EAAMzB,GACd2B,MAAMC,IACL9B,EAAS,QAAQ,IAElB+B,OAAOC,IACDA,EAAIC,SAASN,KAAKO,QAGrBC,EAAAA,GAAMC,MAAM,yBAFZD,EAAAA,GAAMC,MAAM,mCAId9B,GAAa,EAAM,GACnB,IAqBiES,SAAA,EAC3DK,EAAAA,EAAAA,MAACF,EAAAA,GAAI,CAACqB,GAAI,EAAGpB,GAAI,GAAGJ,SAAA,EAClBF,EAAAA,EAAAA,KAAC2B,EAAAA,GAAU,CAAAzB,SAAC,UACZF,EAAAA,EAAAA,KAAC4B,EAAAA,GAAU,CACTC,KAAK,OACLC,GAAG,yBACCnD,EAAS,OAAQ,CACnBoD,SAAU,qBAEZC,YAAY,YACZC,UAAWhD,EAAOc,QAEpBC,EAAAA,EAAAA,KAACkC,EAAAA,GAAa,CAACD,SAAO,EAAA/B,SAAC,yBAEzBF,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACqB,GAAI,EAAGpB,GAAI,GAAIL,UAAU,2BAA0BC,SACtDV,GACCe,EAAAA,EAAAA,MAAC4B,EAAAA,GAAO,CAACC,UAAQ,EAAAlC,SAAA,EACfF,EAAAA,EAAAA,KAACqC,EAAAA,GAAQ,CAACC,UAAU,OAAOC,KAAK,KAAK,cAAY,SAAS,iBAI5DvC,EAAAA,EAAAA,KAACmC,EAAAA,GAAO,CAACN,KAAK,SAAS5B,UAAU,YAAWC,SAC5B,KAAbb,EAAkB,MAAQ,6BAUzC,C","sources":["views/pages/meal/MealForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CFormFeedback,\r\n  CFormInput,\r\n  CFormLabel,\r\n  CRow,\r\n  CSpinner,\r\n  CFormSelect,\r\n} from '@coreui/react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { addMeal, updateMeal } from 'src/redux/api/api'\r\n\r\nconst MealForm = () => {\r\n  const {\r\n    register,\r\n    getValues,\r\n    setValue,\r\n    handleSubmit,\r\n    clearErrors,\r\n    formState: { errors },\r\n  } = useForm()\r\n  const navigate = useNavigate()\r\n  const [isUpdate, setIsUpdate] = useState('')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const { state } = useLocation()\r\n  const handleChange = async (fieldName, fieldValue) => {\r\n    clearErrors(fieldName, fieldValue)\r\n      setValue(fieldName, fieldValue)\r\n  }\r\n  const onSubmit = (data) => {\r\n    isUpdate === ''\r\n      ? addMeal(data)\r\n          .then((res) => {\r\n            navigate('/meal')\r\n          })\r\n          .catch((err) => {\r\n            if (!err.response.data.success) {\r\n              toast.error(err.response.data.message)\r\n            } else {\r\n              setIsLoading(false)\r\n            }\r\n          })\r\n      : updateMeal(data, isUpdate)\r\n          .then((res) => {\r\n            navigate('/meal')\r\n          })\r\n          .catch((err) => {\r\n            if (!err.response.data.success) {\r\n              toast.error('Must be Fill All Field required')\r\n            } else {\r\n              toast.error('Something Went Wrong!')\r\n            }\r\n            setIsLoading(false)\r\n          })\r\n  }\r\n  useEffect(() => {\r\n    if (state) {\r\n      const { editData } = state\r\n    \r\n      setIsUpdate(editData._id)\r\n      setValue('name', editData.name)\r\n    }\r\n  }, [])\r\n  return (\r\n    <div className=\" bg-light min-vh-100\">\r\n      <CContainer className=\"mt-3\">\r\n        <CRow>\r\n          <CCol md={8}>\r\n            <CCard>\r\n              <CCardHeader>\r\n                <strong>Meal Form</strong>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <ToastContainer />\r\n                <CForm className=\"row g-3 \" onSubmit={handleSubmit(onSubmit)}>\r\n                  <CCol xl={6} md={12}>\r\n                    <CFormLabel>Meal</CFormLabel>\r\n                    <CFormInput\r\n                      type=\"text\"\r\n                      id=\"validationDefault01\"\r\n                      {...register('name', {\r\n                        required: 'Meal is required',\r\n                      })}\r\n                      placeholder=\"meal name\"\r\n                      invalid={!!errors.name}\r\n                    />\r\n                    <CFormFeedback invalid>Meal is required</CFormFeedback>\r\n                  </CCol>\r\n                  <CCol xl={6} md={12} className=\"text-center submitButton\">\r\n                    {isLoading ? (\r\n                      <CButton disabled>\r\n                        <CSpinner component=\"span\" size=\"sm\" aria-hidden=\"true\" />\r\n                        Loading...\r\n                      </CButton>\r\n                    ) : (\r\n                      <CButton type=\"submit\" className=\"AddButton\">\r\n                        {isUpdate === '' ? 'Add' : 'Update'}\r\n                      </CButton>\r\n                    )}\r\n                  </CCol>\r\n                </CForm>\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MealForm\r\n"],"names":["MealForm","register","getValues","setValue","handleSubmit","clearErrors","formState","errors","useForm","navigate","useNavigate","isUpdate","setIsUpdate","useState","isLoading","setIsLoading","state","useLocation","useEffect","editData","_id","name","_jsx","className","children","CContainer","CRow","CCol","md","_jsxs","CCard","CCardHeader","CCardBody","ToastContainer","CForm","onSubmit","data","addMeal","then","res","catch","err","response","success","toast","error","message","updateMeal","xl","CFormLabel","CFormInput","type","id","required","placeholder","invalid","CFormFeedback","CButton","disabled","CSpinner","component","size"],"sourceRoot":""}