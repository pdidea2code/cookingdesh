{"version":3,"file":"static/js/701.7e0e3674.chunk.js","mappings":"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","sources":["../node_modules/@coreui/icons/src/free/cil-envelope-closed.ts","views/pages/auth/EditProfile.js"],"sourcesContent":["export var cilEnvelopeClosed = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M16,112V496H496V112ZM236.8,341.6a32.167,32.167,0,0,0,38.4,0L298.667,324,464,448v16H48V448L213.333,324ZM256,316,48,160V144H464v16ZM48,200,186.667,304,48,408ZM464,408,325.333,304,464,200Z' class='ci-primary'/>\"];\n","import React, { useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport {\n  CContainer,\n  CRow,\n  CCol,\n  CCard,\n  CCardGroup,\n  CCardBody,\n  CForm,\n  CInputGroup,\n  CInputGroupText,\n  CFormInput,\n  CButton,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilUser, cilEnvelopeClosed } from '@coreui/icons'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { UpdateProfile } from 'src/redux/api/api'\nimport Cookies from 'js-cookie'\n\nconst EditProfile = () => {\n  const {\n    register,\n    getValues,\n    setValue,\n    handleSubmit,\n    control,\n    clearErrors,\n    formState: { errors },\n  } = useForm()\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState()\n\n  const adminString = Cookies.get('admin')\n  const admin = adminString ? JSON.parse(adminString) : null\n\n  const onSubmit = async (data) => {\n    setError('')\n    setIsLoading(true)\n\n    let formData = new FormData()\n    Object.keys(data).forEach(function (key) {\n      if (key === 'image') {\n        if (data[key][0] !== undefined) {\n          formData.append(key, data[key][0])\n        }\n      } else {\n        formData.append(key, data[key])\n      }\n    })\n\n    UpdateProfile(formData)\n      .then((res) => {\n        const data = res.data.info.data\n        if (res.data.isSuccess && res.status === 200) {\n          const adminObject = {\n            name: data.name,\n            id: data._id,\n            email: data.email,\n            img: data.image ? res.data.info.baseUrl + data.image : null,\n          }\n          setValue('name', data.name)\n          Cookies.set('admin', JSON.stringify(adminObject), { sameSite: 'Strict', secure: true })\n          toast.success('Updated successfully!')\n        } else {\n          setError(res.data.message || 'Something went wrong!')\n        }\n        setIsLoading(false)\n      })\n      .catch((err) => {\n        console.log(err)\n        const errorMessage = err.response?.data?.message || 'Something Went Wrong!'\n        setError(errorMessage)\n        toast.error(errorMessage)\n        setIsLoading(false)\n      })\n  }\n\n  useEffect(() => {\n    if (admin) {\n      setValue('name', admin.name)\n      setValue('email', admin.email)\n    }\n  }, [admin, setValue])\n\n  return (\n    <div className=\"bg-light profile\">\n      <CContainer className=\"profile-container\">\n        <CRow>\n          <CCol>\n            <CCardGroup>\n              <CCard className=\"p-4 mb-4 profile-card\">\n                <CCardBody>\n                  <CForm onSubmit={handleSubmit(onSubmit)}>\n                    <h2 className=\"text-center mb-4\">Edit Your Profile</h2>\n\n                    <div in={error}>\n                      <p className=\"errors\">{error ? error : ''}</p>\n                    </div>\n\n                    <CFormInput {...register('_id')} type=\"hidden\" value={admin?.id} />\n\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <ToastContainer />\n                      <CFormInput\n                        {...register('name', { required: 'Name is required' })}\n                        placeholder=\"Name\"\n                        defaultValue={admin?.name}\n                        autoComplete=\"current-name\"\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilEnvelopeClosed} />\n                      </CInputGroupText>\n                      <CFormInput\n                        {...register('email')}\n                        type=\"text\"\n                        autoComplete=\"current-email\"\n                        disabled={true}\n                        defaultValue={admin?.email}\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CFormInput\n                        type=\"file\"\n                        accept=\"image/*\"\n                        {...register('image')}\n                        id=\"image\"\n                        aria-label=\"file example\"\n                      />\n                    </CInputGroup>\n                    <CRow className=\"update-button\">\n                      <CCol xs={12} sm={4} className=\"mb-2 mb-md-0 \">\n                        <CButton type=\"submit\" className=\"w-100 custom-color\" disabled={isLoading}>\n                          {isLoading ? 'Loading...' : 'Update'}\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default EditProfile\n"],"names":["cilEnvelopeClosed","EditProfile","register","getValues","setValue","handleSubmit","control","clearErrors","formState","errors","useForm","isLoading","setIsLoading","useState","error","setError","adminString","Cookies","get","admin","JSON","parse","useEffect","name","email","_jsx","className","children","CContainer","CRow","CCol","CCardGroup","CCard","CCardBody","_jsxs","CForm","onSubmit","async","formData","FormData","Object","keys","data","forEach","key","undefined","append","UpdateProfile","then","res","info","isSuccess","status","adminObject","id","_id","img","image","baseUrl","set","stringify","sameSite","secure","toast","success","message","catch","err","_err$response","_err$response$data","console","log","errorMessage","response","in","CFormInput","type","value","CInputGroup","CInputGroupText","CIcon","icon","cilUser","ToastContainer","required","placeholder","defaultValue","autoComplete","disabled","accept","xs","sm","CButton"],"sourceRoot":""}